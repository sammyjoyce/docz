.{
    // ============================================================================
    // AGENT MANIFEST - Standardized Metadata Format
    // ============================================================================
    // This manifest provides comprehensive metadata for terminal AI agents.
    // All fields are optional but recommended for proper agent discovery and management.

    // ============================================================================
    // AGENT IDENTIFICATION
    // ============================================================================
    .agent = .{
        // Unique identifier for the agent (lowercase, no spaces)
        .id = "test_agent",

        // Human-readable name
        .name = "Test Agent",

        // Semantic version (e.g., "1.0.0", "2.1.3-alpha")
        .version = "1.0.0",

        // Brief description of what the agent does
        .description = "Example agent demonstrating tool integration, JSON tools, and basic functionality",

        // Author information
        .author = .{
            .name = "Test Author",
            .email = "test@example.com",
            .organization = "Test Organization",
        },

        // Optional: License information
        .license = "MIT",

        // Optional: Homepage or repository URL
        .homepage = "https://github.com/test/test_agent",
    },

    // ============================================================================
    // CAPABILITIES & FEATURES
    // ============================================================================
    .capabilities = .{
        // Core capabilities this agent provides
        .core_features = .{
            // Whether agent can process files
            .file_processing = false,

            // Whether agent can execute system commands
            .system_commands = false,

            // Whether agent can make network requests
            .network_access = false,

            // Whether agent supports interactive terminal UI
            .terminal_ui = true,

            // Whether agent can process images/media
            .media_processing = false,

            // Whether agent supports real-time streaming
            .streaming_responses = false,
        },

        // Specialized features (agent-specific)
        .specialized_features = .{
            // Basic example tools
            .basic_example_tools = true,

            // JSON tool integration
            .json_tool_integration = true,
        },

        // Performance characteristics
        .performance = .{
            // Expected memory usage (low, medium, high)
            .memory_usage = "low",

            // CPU intensity (low, medium, high)
            .cpu_intensity = "low",

            // Network bandwidth requirements (low, medium, high)
            .network_bandwidth = "low",
        },
    },

    // ============================================================================
    // CATEGORIZATION & DISCOVERY
    // ============================================================================
    .categorization = .{
        // Primary category
        .primary_category = "development",

        // Secondary categories (array of strings)
        .secondary_categories = .{
            "testing",
            "demo",
        },

        // Tags for search and filtering
        .tags = .{
            "test",
            "example",
            "demo",
            "development",
        },

        // Intended use cases
        .use_cases = .{
            "Demonstrating agent structure",
            "Learning agent development",
            "Testing agent infrastructure",
        },
    },

    // ============================================================================
    // DEPENDENCIES
    // ============================================================================
    .dependencies = .{
        // Required Zig version (minimum)
        .zig_version = "0.15.1",

        // External dependencies
        .external = .{
            // Array of required system packages/libraries
            .system_packages = .{
                // None required for test agent
            },

            // Zig packages (from build.zig.zon)
            .zig_packages = .{
                // None required for test agent
            },
        },

        // Optional dependencies
        .optional = .{
            // Features that can work without these
            .features = .{
                // None for test agent
            },
        },
    },

    // ============================================================================
    // BUILD CONFIGURATION
    // ============================================================================
    .build = .{
        // Build targets supported
        .targets = .{
            "x86_64-linux",
            "aarch64-linux",
            "x86_64-macos",
            "aarch64-macos",
            "x86_64-windows",
        },

        // Build options
        .options = .{
            // Whether agent supports debug builds
            .debug_build = true,

            // Whether agent supports release builds
            .release_build = true,

            // Whether agent can be built as library
            .library_build = false,

            // Custom build flags (array of strings)
            .custom_flags = .{
                // None for test agent
            },
        },

        // Build artifacts
        .artifacts = .{
            // Binary name
            .binary_name = "test_agent",

            // Additional files to include in distribution
            .include_files = .{
                "README.md",
                "config.zon",
            },
        },
    },

    // ============================================================================
    // TOOL CATEGORIES
    // ============================================================================
    .tools = .{
        // Categories of tools this agent provides
        .categories = .{
            "development",
            "testing",
        },

        // Specific tools provided (for documentation)
        .provided_tools = .{
            .{
                .name = "example_tool",
                .description = "An example tool for demonstration",
                .category = "development",
                .parameters = "input:string",
            },
        },

        // Tool integration
        .integration = .{
            // Whether tools support JSON input/output
            .json_tools = true,

            // Whether tools support streaming
            .streaming_tools = false,

            // Whether tools can be chained together
            .chainable_tools = false,
        },
    },

    // ============================================================================
    // RUNTIME REQUIREMENTS
    // ============================================================================
    .runtime = .{
        // Minimum system requirements
        .system_requirements = .{
            // Minimum RAM in MB
            .min_ram_mb = 256,

            // Minimum disk space in MB
            .min_disk_mb = 50,

            // Supported operating systems
            .supported_os = .{
                "linux",
                "macos",
                "windows",
            },
        },

        // Environment variables required
        .environment_variables = .{
            // None required for test agent
        },

        // Configuration files required
        .config_files = .{
            .{
                .name = "config.zon",
                .description = "Agent configuration file",
                .required = true,
            },
        },

        // Network requirements
        .network = .{
            // Required ports
            .ports = .{
                // None required for test agent
            },

            // Required endpoints
            .endpoints = .{
                // None required for test agent
            },
        },
    },

    // ============================================================================
    // METADATA
    // ============================================================================
    .metadata = .{
        // When this manifest was created/updated
        .created_at = "2025-08-27",

        // Template version this manifest conforms to
        .template_version = "1.0",

        // Additional notes or comments
        .notes = "Test agent manifest for demonstrating agent structure and capabilities.",

        // Changelog for this version
        .changelog = .{
            .{
                .version = "1.0.0",
                .changes = "Initial test agent manifest with basic configuration",
            },
        },
    },
}
