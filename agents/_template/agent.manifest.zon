.{
    // ============================================================================
    // AGENT MANIFEST - Standardized Metadata Format
    // ============================================================================
    // This manifest provides comprehensive metadata for terminal AI agents.
    // All fields are optional but recommended for proper agent discovery and management.

    // ============================================================================
    // AGENT IDENTIFICATION
    // ============================================================================
    .agent = .{
        // Unique identifier for the agent (lowercase, no spaces)
        .id = "template-agent",

        // Human-readable name
        .name = "Template Agent",

        // Semantic version (e.g., "1.0.0", "2.1.3-alpha")
        .version = "1.0.0",

        // Brief description of what the agent does
        .description = "A template agent demonstrating standardized structure and capabilities",

        // Author information
        .author = .{
            .name = "Your Name",
            .email = "your.email@example.com",
            .organization = "Optional Organization",
        },

        // Optional: License information
        .license = "MIT",

        // Optional: Homepage or repository URL
        .homepage = "https://github.com/your-org/your-repo",
    },

    // ============================================================================
    // CAPABILITIES & FEATURES
    // ============================================================================
    .capabilities = .{
        // Core capabilities this agent provides
        .core_features = .{
            // Whether agent can process files
            .file_processing = true,

            // Whether agent can execute system commands
            .system_commands = false,

            // Whether agent can make network requests
            .network_access = true,

            // Whether agent supports interactive terminal UI
            .terminal_ui = true,

            // Whether agent can process images/media
            .media_processing = false,

            // Whether agent supports real-time streaming
            .streaming_responses = true,
        },

        // Specialized features (agent-specific)
        .specialized_features = .{
            // Example: markdown processing
            .markdown_processing = true,

            // Example: code generation
            .code_generation = false,

            // Example: data analysis
            .data_analysis = false,
        },

        // Performance characteristics
        .performance = .{
            // Expected memory usage (low, medium, high)
            .memory_usage = "low",

            // CPU intensity (low, medium, high)
            .cpu_intensity = "low",

            // Network bandwidth requirements (low, medium, high)
            .network_bandwidth = "low",
        },
    },

    // ============================================================================
    // CATEGORIZATION & DISCOVERY
    // ============================================================================
    .categorization = .{
        // Primary category
        .primary_category = "development",

        // Secondary categories (array of strings)
        .secondary_categories = .{
            "documentation",
            "automation",
        },

        // Tags for search and filtering
        .tags = .{
            "template",
            "example",
            "standardized",
            "cli",
            "terminal",
        },

        // Intended use cases
        .use_cases = .{
            "Demonstrating agent structure",
            "Learning agent development",
            "Testing agent infrastructure",
        },
    },

    // ============================================================================
    // DEPENDENCIES
    // ============================================================================
    .dependencies = .{
        // Required Zig version (minimum)
        .zig_version = "0.15.1",

        // External dependencies
        .external = .{
            // Array of required system packages/libraries
            .system_packages = .{
                // "curl",
                // "openssl",
            },

            // Zig packages (from build.zig.zon)
            .zig_packages = .{
                // .{ .name = "http-client", .version = "1.0.0" },
            },
        },

        // Optional dependencies
        .optional = .{
            // Features that can work without these
            .features = .{
                // .{ .name = "network", .requires = "curl" },
            },
        },
    },

    // ============================================================================
    // SHARED MODULES
    // ============================================================================
    .shared_modules = .{
        // Core shared modules this agent requires
        .core = .{
            // Whether agent requires CLI components
            .cli = true,

            // Whether agent requires TUI components
            .tui = true,

            // Whether agent requires network functionality
            .network = true,

            // Whether agent requires authentication
            .auth = false,

            // Whether agent requires rendering capabilities
            .render = false,

            // Whether agent requires terminal capabilities
            .term = true,

            // Whether agent requires shared tools
            .tools = true,

            // Whether agent requires shared components
            .components = false,
        },

        // Optional shared modules
        .optional = .{
            // .{ .name = "render", .description = "Advanced rendering for charts/tables", .required = false },
        },

        // Module-specific configuration
        .configuration = .{
            // CLI features required
            .cli_features = .{
                .commands = true,
                .components = true,
                .formatters = true,
                .interactive = false,
                .themes = true,
                .utils = true,
                .workflows = false,
            },

            // TUI features required
            .tui_features = .{
                .components = true,
                .core = true,
                .demos = false,
                .themes = true,
                .utils = true,
                .widgets = false,
            },

            // Network features required
            .network_features = .{
                .anthropic = true,
                .curl = true,
                .sse = false,
            },

            // Auth features required
            .auth_features = .{
                .cli = false,
                .core = false,
                .oauth = false,
                .tui = false,
            },
        },
    },

    // ============================================================================
    // BUILD CONFIGURATION
    // ============================================================================
    .build = .{
        // Build targets supported
        .targets = .{
            "x86_64-linux",
            "aarch64-linux",
            "x86_64-macos",
            "aarch64-macos",
            "x86_64-windows",
        },

        // Build options
        .options = .{
            // Whether agent supports debug builds
            .debug_build = true,

            // Whether agent supports release builds
            .release_build = true,

            // Whether agent can be built as library
            .library_build = false,

            // Custom build flags (array of strings)
            .custom_flags = .{
                // "-Doptimize=ReleaseFast",
            },
        },

        // Build artifacts
        .artifacts = .{
            // Binary name
            .binary_name = "template-agent",

            // Additional files to include in distribution
            .include_files = .{
                // "README.md",
                // "config.zon",
            },
        },
    },

    // ============================================================================
    // TOOL CATEGORIES
    // ============================================================================
    .tools = .{
        // Categories of tools this agent provides
        .categories = .{
            "file_operations",
            "text_processing",
            "system_integration",
        },

        // Specific tools provided (for documentation)
        .provided_tools = .{
            .{
                .name = "example_tool",
                .description = "An example tool for demonstration",
                .category = "file_operations",
                .parameters = "file_path:string",
            },
        },

        // Tool integration
        .integration = .{
            // Whether tools support JSON input/output
            .json_tools = true,

            // Whether tools support streaming
            .streaming_tools = false,

            // Whether tools can be chained together
            .chainable_tools = true,
        },
    },

    // ============================================================================
    // RUNTIME REQUIREMENTS
    // ============================================================================
    .runtime = .{
        // Minimum system requirements
        .system_requirements = .{
            // Minimum RAM in MB
            .min_ram_mb = 256,

            // Minimum disk space in MB
            .min_disk_mb = 50,

            // Supported operating systems
            .supported_os = .{
                "linux",
                "macos",
                "windows",
            },
        },

        // Environment variables required
        .environment_variables = .{
            // .{ .name = "API_KEY", .description = "Required API key for service", .required = true },
        },

        // Configuration files required
        .config_files = .{
            // .{ .name = "config.zon", .description = "Agent configuration file", .required = true },
        },

        // Network requirements
        .network = .{
            // Required ports
            .ports = .{
                // .{ .port = 8080, .protocol = "tcp", .description = "Web server port" },
            },

            // Required endpoints
            .endpoints = .{
                // .{ .url = "https://api.example.com", .description = "External API endpoint" },
            },
        },
    },

    // ============================================================================
    // METADATA
    // ============================================================================
    .metadata = .{
        // When this manifest was created/updated
        .created_at = "2025-01-27",

        // Template version this manifest conforms to
        .template_version = "1.0",

        // Additional notes or comments
        .notes = "This is a template manifest. Customize all fields for your specific agent.",

        // Changelog for this version
        .changelog = .{
            .{
                .version = "1.0.0",
                .changes = "Initial template manifest with comprehensive metadata structure",
            },
        },
    },
}
